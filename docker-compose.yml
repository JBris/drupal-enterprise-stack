version: "3.5"

services:

  postgres:
    image: postgres:$POSTGRES_TAG
    container_name: "${PROJECT_NAME}_postgres"
    build: 
      dockerfile: Dockerfile
      context: ./services/postgres
      args:
        POSTGRES_TAG: $POSTGRES_TAG
    stop_grace_period: 60s
    restart: always
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
    ports:
      - ${DB_PORT}:${DB_CONTAINER_PORT}
    volumes:
      - /var/lib/postgresql/data
      - ./data:/var/data

  drupal:
    image: drupal:$DRUPAL_TAG
    container_name: "${PROJECT_NAME}_drupal"
    stop_grace_period: 60s
    restart: always
    #privileged: true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    build: 
      dockerfile: Dockerfile
      context: .
      args:
        DRUPAL_TAG: $DRUPAL_TAG
        MEMORY_LIMIT: $DRUPAL_MEMORY_LIMIT
    depends_on:
      - postgres
    environment:
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_CONTAINER_PORT: $DB_CONTAINER_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      ENABLE_REDIS: $DRUPAL_ENABLE_REDIS
      COLUMNS: 80
    ports:
      - ${DRUPAL_PORT}:80
    volumes:
      - ./app:/var/www/html

  nginx:
    image: nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    stop_grace_period: 60s
    restart: always
    depends_on:
      - drupal
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./app:/var/www/html
      - ./services/nginx/conf.d:/etc/nginx/conf.d

  mailhog:
    image: mailhog/mailhog:$MAILHOG_TAG
    container_name: "${PROJECT_NAME}_mailhog"
    stop_grace_period: 60s
    restart: always
    ports:
      - ${MAILHOG_SMTP_PORT}:1025
      - ${MAILHOG_HTTP_PORT}:8025
    labels:
      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  adminer:
    image: adminer:$ADMINER_TAG
    container_name: "${PROJECT_NAME}_adminer"
    stop_grace_period: 60s
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
      
  portainer:
    image: portainer/portainer:$PORTAINER_TAG
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    stop_grace_period: 60s
    restart: always
    ports:
      - ${PORTAINER_PORT}:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_portainer.rule=Host(`portainer.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:$TRAEFIK_TAG
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker=true
    stop_grace_period: 60s
    restart: always
    ports:
      - ${TRAEFIK_PORT}:80
      - ${TRAEFIK_DASHBOARD_PORT}:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # node:
  #   image: node:$NODE_TAG
  #   container_name: "${PROJECT_NAME}_node"
  #   stop_grace_period: 60s
  #   restart: always    
  #   ports:
  #     - ${NODE_PORT}:3000
  #   depends_on:
  #     - postgres
  #   labels:
  #     - "traefik.http.routers.${PROJECT_NAME}_node.rule=Host(`node.${PROJECT_BASE_URL}`)"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTICSEARCH_TAG
    container_name: "${PROJECT_NAME}_elasticsearch"
    stop_grace_period: 60s
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - ${ELASTICSEARCH_REST_PORT}:9200
      - ${ELASTICSEARCH_NODE_PORT}:9300
    environment:
      - $ES_JAVA_OPTS
      - $DISCOVERY_TYPE
      - $BOOTSTRAP_MEMORY_LOCK
      - $ELASTICSEARCH_CLUSTER_NAME
      #- $ELASTICSEARCH_NODE_NAME_MASTER
      #- $ELASTICSEARCH_CLUSTER_INITIAL_MASTER_NODES

  kibana:
    image: docker.elastic.co/kibana/kibana:$KIBANA_TAG
    container_name: "${PROJECT_NAME}_kibana"
    stop_grace_period: 60s
    restart: always
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    depends_on:
      - elasticsearch
    ports:
      - ${KIBANA_PORT}:5601
    labels:
      - "traefik.http.services.${PROJECT_NAME}_kibana.loadbalancer.server.port=5601"
      - "traefik.http.routers.${PROJECT_NAME}_kibana.rule=Host(`kibana.${PROJECT_BASE_URL}`)"

  redis:
    image: redis:$REDIS_TAG
    container_name: "${PROJECT_NAME}_redis"
    stop_grace_period: 60s
    restart: always
    ports:
      - ${REDIS_PORT}:6379

  drush:
    image: drush/drush:$DRUSH_TAG
    container_name: "${PROJECT_NAME}_drush"
    depends_on:
      - drupal
    environment:
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_CONTAINER_PORT: $DB_CONTAINER_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
    volumes:
      - ./app:/app

networks:
  default:
      name: docker_enterprise_stack
